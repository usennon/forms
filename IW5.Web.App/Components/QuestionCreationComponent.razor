@using IW5.Models.Entities
@using IW5.Common.Enums
@using IW5.BL.Models.ManipulationModels.QuestionModels
@using IW5.BL.Models.ManipulationModels.OptionModels

<div class="card mb-3">
    <div class="card-body">
        <button type="button" class="btn-close float-end" aria-label="Close" @onclick="OnRemove"></button>

        <div class="mb-3">
            <label class="form-label">Question text</label>
            <InputText @bind-Value="Question.Text" class="form-control" />
        </div>

        <div class="mb-3">
            <label class="form-label">Description</label>
            <InputTextArea @bind-Value="Question.Description" class="form-control" />
        </div>

        <div class="mb-3">
            <label class="form-label">Type</label>
            <InputSelect @bind-Value="Question.Type" class="form-select">
                @foreach (var type in Enum.GetValues(typeof(QuestionType)))
                {
                    <option value="@type">@type</option>
                }
            </InputSelect>
        </div>

        <div class="form-check mb-3">
            <InputCheckbox @bind-Value="Question.IsRequired" class="form-check-input" />
            <label class="form-check-label">Required</label>
        </div>

        @if (Question.Type == QuestionType.MultipleChoice || Question.Type == QuestionType.Test)
        {
            <h5>Answer variants</h5>
            @if (Question.Options != null && Question.Options.Any())
            {
                @foreach (var option in Question.Options)
                {
                    <div class="input-group mb-2">
                        <InputText @bind-Value="option.Text" class="form-control" placeholder="Text" />
                        <button type="button" class="btn btn-outline-danger" @onclick="() => RemoveOption(option)">Delete</button>
                    </div>
                }

            }
            else
            {
                <p>No options yet. Add some variants.</p>
            }
            <button type="button" class="btn btn-secondary" @onclick="AddOption">Add variant</button>
        }
    </div>
</div>

@code {
    [Parameter]
    public QuestionForManipulationModel Question { get; set; }

    [Parameter]
    public EventCallback OnRemove { get; set; }

    private void AddOption()
    {
        Question.Options ??= new List<OptionForManipulationModel>();
        Question.Options.Add(new OptionForManipulationModel
            {
                Id = Guid.Empty,
                Text = "New Option"
            });
    }

    private void RemoveOption(OptionForManipulationModel option)
    {
        if (Question.Options != null && Question.Options.Contains(option))
        {
            Question.Options.Remove(option);
        }
    }
}


