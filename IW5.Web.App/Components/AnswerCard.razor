@using IW5.Models.Entities
@inject IW5ApiService ApiService
@inject IJSRuntime JSRuntime

<div class="card shadow-sm mb-3" style="border-radius: 10px;">
    <div class="card-body d-flex align-items-center">
        <div class="flex-grow-1">
            <h5 class="card-title text-truncate mb-1 text-info" title="@Answer.Form.Title">
                <strong>Form:</strong> @Answer.Form.Title
            </h5>
            <p class="card-text mb-1">
                <strong>User:</strong> @Answer.User.UserName
            </p>
            <p class="card-text mb-1">
                <strong>Question:</strong> @Answer.Question.Text
            </p>
            <p class="card-text mb-1">
                <strong>Answer:</strong> @Answer.AnswerText
            </p>
            @if (Answer.AnswerOptionId != null)
            {
                <p class="card-text mb-1">
                    <strong>Selected Option:</strong> @Answer.AnswerOptionId
                </p>
            }
            <p class="card-text mb-1">
                <strong>CreatedAt:</strong> @Answer.CreatedAt
            </p>
        </div>
        <div class="text-end">
            <a href="/answers/@Answer.Id" class="btn btn-primary btn-sm mb-2">Details</a>
            <button class="btn btn-danger btn-sm mb-2" @onclick="() => DeleteAnswer(Answer.Id)">Delete</button>
        </div>
    </div>
</div>

@code {
    [Parameter] public Answer Answer { get; set; }

    private async Task DeleteAnswer(Guid answerId)
    {
        var confirm = await JSRuntime.InvokeAsync<bool>("confirm", new object[] { "Are you sure you want to delete this answer?" });
        if (confirm)
        {
            await ApiService.DeleteAnswerAsync(answerId);
        }
    }
}
