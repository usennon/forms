@using IW5.Models.Entities
@inject IW5ApiService ApiService
@inject IJSRuntime JSRuntime
@inject IW5.Web.App.Services.TokenService TokenService

<div class="card shadow-sm mb-3" style="border-radius: 10px;">
    <div class="card-body d-flex align-items-center">
        <div class="flex-grow-1">
            <h5 class="card-title text-truncate mb-1" title="@Form.Title">
                @Form.Title
            </h5>
            <p class="card-text mb-1">
                <strong>Start Date:</strong> @Form.StartDate.ToString("MMM dd, yyyy")
            </p>
            <p class="card-text mb-1">
                <strong>End Date:</strong> @Form.EndDate.ToString("MMM dd, yyyy")
            </p>
            <div class="d-flex align-items-center">
                <p class="mb-0 me-2"><strong>Author:</strong> @Form.Author.UserName</p>
                <p class="mb-0"><strong>Email:</strong> @Form.Author.Email</p>
            </div>
        </div>
        <div class="text-end">
            <a href="/forms/@Form.Id" class="btn btn-primary btn-sm mb-2">Details</a>
            @if (IsCurrentUserAuthor)
            {
                <a href="/edit-form/@Form.Id" class="btn btn-warning btn-sm mb-2">Edit</a>
                <button class="btn btn-danger btn-sm mb-2" @onclick="() => DeleteForm(Form.Id)">Delete</button>
            }
            <div>
                <span class="badge bg-secondary">@Form.Questions.Count() Questions</span>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public Form Form { get; set; }
    private bool IsCurrentUserAuthor =>
        TokenService.DecodedToken.GetProperty("username").GetString() == Form.Author.UserName ||
         TokenService.DecodedToken.GetProperty("Role").GetString() == "Admin";

    private async Task DeleteForm(Guid formId)
    {
        var confirm = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this form?");
        if (confirm)
        {
            await ApiService.DeleteFormAsync(formId);
        }
    }
}
