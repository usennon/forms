@using IW5.Models.Entities

@foreach (var option in Options)
{
    <div class="form-check">
        <input class="form-check-input" type="checkbox"
               id="@($"option_{option.Id}")"
               value="@option.Id.ToString()"
               @onchange="() => OnCheckboxChanged(option.Id)"
               checked="@SelectedOptionsIds.Contains(option.Id)" />
        <label class="form-check-label" for="@($"option_{option.Id}")">
            @option.Text
        </label>
    </div>
}

@code {
    [Parameter]
    public ICollection<Option> Options { get; set; }

    [Parameter]
    public Guid QuestionId { get; set; }

    [Parameter] 
    public EventCallback<List<Guid>> OnOptionsSelected { get; set; }

    private List<Guid> SelectedOptionsIds { get; set; } = new List<Guid>();

    private List<string> SelectedOptionsStrings { get; set; } = new List<string>();

    public List<Guid> SelectedOptions
    {
        get => SelectedOptionsStrings.Select(s => Guid.Parse(s)).ToList();
    }

    private async Task OnCheckboxChanged(Guid optionId)
    {
        if (SelectedOptionsIds.Contains(optionId))
        {
            SelectedOptionsIds.Remove(optionId);
        }
        else
        {
            SelectedOptionsIds.Add(optionId);
        }

        await OnOptionsSelected.InvokeAsync(new List<Guid>(SelectedOptionsIds));
    }
}
