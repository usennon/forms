@page "/create-form"
@using IW5.Web.App.Components
@using IW5.BL.Models.ManipulationModels.FormsModels
@using IW5.BL.Models.ManipulationModels.QuestionModels
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject IW5ApiService ApiService
@inject IW5.Web.App.Services.TokenService TokenService
@inject NavigationManager NavigationManager

<h3>New form creation</h3>

@if (newForm == null)
{
    <p>Loading...</p>
}
else
{
    <FormManipulationComponent Model="newForm" OnValidSubmit="HandleValidSubmit" OnCancel="HandleCancel" />
}

@code {
    private FormForManipulationModel newForm;

    @inject IAccessTokenProvider TokenProvider


    protected override void OnInitialized()
    {
        newForm = new FormForManipulationModel
        {
            Questions = new List<QuestionForManipulationModel>()
        };
        string authorIdString = TokenService.DecodedToken.GetProperty("Id").GetString();
        if (Guid.TryParse(authorIdString, out Guid authorId))
        {
            newForm.AuthorId = authorId;
        }
        else
        {
            throw new Exception("Incorrect token guid");
        }
    }


    private async Task HandleValidSubmit(FormForManipulationModel form)
    {

        await ApiService.CreateFormAsync(form);
        NavigationManager.NavigateTo("/");
    }

    private void HandleCancel()
    {
        NavigationManager.NavigateTo("/");
    }
}


