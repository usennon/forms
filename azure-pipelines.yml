# ASP.NET Core (.NET Framework)
# Build, test, and deploy ASP.NET Core projects targeting the full .NET Framework.

trigger:
  branches:
    include:
      - api.tests

pool:
  vmImage: 'windows-latest'

variables:
  # Solution and build configuration
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

  # Azure deployment variables
  azureSubscription: 'AzureServiceConnection'   # Replace with your service connection name
  appName: 'app-iw5-2024-team-xpopov10-api'     # Replace with your Azure App Service name
  resourceGroupName: 'rg-iw5-2024-project'      # Replace with your resource group name

  # Application settings variables
  Value1: 'YourValue1'                          # Replace with actual value or define as a pipeline variable
  Value2: 'YourValue2'                          # Replace with actual value or define as a pipeline variable

  # Note: Store sensitive information like connection strings as secret variables in Azure DevOps
  # Define 'ConnectionString' as a secret variable in your pipeline variables

steps:
# Install NuGet (if not already installed on the agent)
- task: NuGetToolInstaller@1

# Restore NuGet packages
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

# Replace tokens in appsettings*.json files (if using tokenization)
- task: replacetokens@5
  inputs:
    targetFiles: '**/appsettings*.json'
    encoding: 'auto'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: false
    tokenPrefix: '#{'
    tokenSuffix: '}#'

# Build the solution
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(Build.ArtifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Run unit tests
- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Publish the artifact (Web Deploy package)
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

# Deploy to Azure App Service
- task: AzureWebApp@1
  inputs:
    azureSubscription: '$(azureSubscription)'
    appType: 'webApp'
    appName: '$(appName)'
    package: '$(Pipeline.Workspace)/drop/WebApp.zip'   # Ensure this path is correct
    appSettings: |
      -Name1 $(Value1)
      -Name2 $(Value2)

# Update connection strings in Azure App Service configuration
- task: AzureAppServiceSettings@1
  inputs:
    azureSubscription: '$(azureSubscription)'
    appName: '$(appName)'
    resourceGroupName: '$(resourceGroupName)'
    connectionStrings: |
      -DefaultConnection $(ConnectionString) SQLServer
